@model ProyectoSemilleros_Agroite.Models.Producto
@{
    ViewBag.Title = "NuevoProducto";
    List<ProyectoSemilleros_Agroite.Models.Categoria> tipo = ViewBag.Tipo;
    List<ProyectoSemilleros_Agroite.Models.UnidadVolumen> tipo1 = ViewBag.Tipo1;
    List<ProyectoSemilleros_Agroite.Models.Frecuencia> tipo2 = ViewBag.Tipo2;
    List<ProyectoSemilleros_Agroite.Models.Usuario> tipo3 = ViewBag.Tipo3;

    //ProyectoFinal_AgroIte.Models.Usuario usuario = new ProyectoFinal_AgroIte.Models.Usuario().Obtener(ProyectoFinal_AgroIte.Models.SessionHelper.GetUser());
}

<div style="margin: 35px 400px">
    <h2><b>Nuevo Producto</b></h2><br />
    @using (Html.BeginForm("Guardar", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(x => x.IdProducto)
        @*<div class="form-group">
                <label>Id Producto: </label>
                @Html.TextBoxFor(x => x.IdProducto, new { @class = "form-control", disabled = true })
            </div>*@
        <div class="form-group">
            <label>Categoria: </label>
            <select name="IdCategoria" class="form-control">
                <option @(Model.IdCategoria.Equals("") ? "selected" : "") value="">-Seleccione-</option>
                @foreach (var t in tipo)
                {
                    <option @(Model.IdCategoria.Equals(t.IdCategoria) ? "selected" : "") value="@t.IdCategoria">@t.Nombre</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>Nombre Producto: </label>
            @Html.TextBoxFor(x => x.Nombre_Producto, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Nombre_Producto, null, new { @class = "label label-danger" })
        </div>
        
        <div class="form-group">
            <label>Precio Referencial: </label>
            @Html.TextBoxFor(x => x.Precio_Referencial, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Precio_Referencial, null, new { @class = "label label-danger" })
        </div>
        <div class="form-group">
            <label>Imagen Producto: </label>
            <input type="file" id="imgfile" name="imgfile" class="btn btn-info" />
            @*@Html.TextBoxFor(x => x.ImagenesProducto, new { @class = "form-control" })*@
            @Html.ValidationMessageFor(x => x.Imagenes_Producto, null, new { @class = "label label-danger" })
        </div>
        <div class="form-group">
            <label>Descripcion Producto: </label>
            @Html.TextBoxFor(x => x.Descripcion_Producto, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Descripcion_Producto, null, new { @class = "label label-danger" })
        </div>
        <div class="form-group">
            <label>Fecha Inicio: </label>
            @Html.TextBoxFor(x => x.Fecha_Inicio, new { @class = "form-control datepicker", @type = "datetime-local", @value = DateTime.Now.ToShortDateString() })
            @Html.ValidationMessageFor(x => x.Fecha_Inicio, null, new { @class = "label label-danger" })
        </div>
        <div class="form-group">
            <label>Fecha Fin: </label>
            @Html.TextBoxFor(x => x.Fecha_Fin, new { @class = "form-control datepicker", @type="datetime-local",@value=DateTime.Now.ToShortDateString() })
            @Html.ValidationMessageFor(x => x.Fecha_Fin, null, new { @class = "label label-danger" })
        </div>
        <div class="form-group">
            <label>Cantidad Producida: </label>
            @Html.TextBoxFor(x => x.Cantidad_Producida, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Cantidad_Producida, null, new { @class = "label label-danger" })
        </div>
        <div class="form-group">
            <label>Unidad Medida: </label>
            <select name="IdUnidadVolumen" class="form-control">
                <option @(Model.IdUnidad_Volumen.Equals("") ? "selected" : "") value="">-Seleccione-</option>
                @foreach (var t in tipo1)
                {
                    <option @(Model.IdUnidad_Volumen.Equals(t.IdUnidadVolumen) ? "selected" : "") value="@t.IdUnidadVolumen">@t.Nombre</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label>Frecuencia Produccion: </label>
            <select name="IdFrecuencia" class="form-control">
                <option @(Model.Idfrecuencia.Equals("") ? "selected" : "") value="">-Seleccione-</option>
                @foreach (var t in tipo2)
                {
                    <option @(Model.Idfrecuencia.Equals(t.Idfrecuencia) ? "selected" : "") value="@t.Idfrecuencia">@t.Nombre</option>
                }
            </select>
        </div>

        @*<div>
            @if (Session["idusuario"] != null)
            {
                <label>Usuario ID: </label>
                <h5>@Session["idusuario"]</h5>

            }
            else
            {

                <div class="sidebar-brand-text mx-3"> null  </div>
            }
        </div>*@

        <div class="text-center">
            <button type="submit" class="btn btn-primary">Guardar</button>
            <a href="~/Usuario/Menu/?idusuario=@(Model != null ? Model.IdUsuario : Session["idusuario"]  )" class="btn btn-danger">Cancelar</a>
        </div>
    }

</div>

